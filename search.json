[{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://omnideconv.org/methylDeconv/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"http://omnideconv.org/methylDeconv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Dietrich. Author, maintainer.","code":""},{"path":"http://omnideconv.org/methylDeconv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dietrich (2025). methyldeconv: Unified access DNA methylation based cell-type deconvolution methods. R package version 0.0.3, http://omnideconv.org/methyldeconv/, https://github.com/omnideconv/methyldeconv.","code":"@Manual{,   title = {methyldeconv: Unified access to DNA methylation based cell-type deconvolution methods},   author = {Alexander Dietrich},   year = {2025},   note = {R package version 0.0.3,      http://omnideconv.org/methyldeconv/},   url = {https://github.com/omnideconv/methyldeconv}, }"},{"path":"http://omnideconv.org/methylDeconv/index.html","id":"methyldeconv","dir":"","previous_headings":"","what":"Unified access to DNA methylation based cell-type deconvolution methods","title":"Unified access to DNA methylation based cell-type deconvolution methods","text":"Ever wanted apply cell-type deconvolution DNA methylation data decide method use? methyldeconv help needs! package integrates unified access five reference-based cell-type deconvolution methods can directly applied Illumina array data (450k, EPIC arrays) bisulfite sequencing data (RRBS, WGBS). included methods :","code":""},{"path":"http://omnideconv.org/methylDeconv/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Unified access to DNA methylation based cell-type deconvolution methods","text":"can install methyldeconv GitHub, recommend use pak package manager:","code":"# install the `pak` package manager install.packages(\"pak\")  pak::pkg_install(\"omnideconv/methyldeconv\")"},{"path":"http://omnideconv.org/methylDeconv/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Unified access to DNA methylation based cell-type deconvolution methods","text":"methyldeconv can either applied directly methylSet minfi package, can apply method separately beta matrix Illumina CpG IDs. cases demonstrated using example data minfi: methyldeconv can either get original result object respective method (methyldeconv::run_XXX) table cell-type fractions unified format methods (methyldeconv::deconvolute).unified results can visualized using methyldeconv functions results_barplot() results_boxplot(). Results run one method (methyldeconv::deconvolute_combined) can easily visualized well results_aggregated_boxplot:","code":"library(methyldeconv) library(minfi) library(minfiData)  # use example data from Minfi methyl_set <- minfiData::MsetEx ratio_set <- minfi::ratioConvert(methyl_set) beta_matrix <- minfi::getBeta(ratio_set)   # run EpiDISH for deconvolution of example data result <- methyldeconv::deconvolute(methyl_set = methyl_set, method = 'epidish')  result_raw <- methyldeconv::run_epidish(beta_matrix = beta_matrix, mode='RPC')   # you can also run multiple methods at the same time and get their results + aggregated results: result_multiple <- methyldeconv::deconvolute_combined(methyl_set = methyl_set,                                                       methods = c('epidish','houseman'),                                                       array = '450k') methyldeconv::results_barplot(result)  methyldeconv::results_boxplot(result) methyldeconv::results_aggregated_boxplot(result_multiple)"},{"path":"http://omnideconv.org/methylDeconv/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Unified access to DNA methylation based cell-type deconvolution methods","text":"full list dependencies can displayed pak:","code":"pak::pkg_deps_tree(\"omnideconv/methyldeconv\")"},{"path":"http://omnideconv.org/methylDeconv/reference/check_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input matrices — check_input","title":"Check input matrices — check_input","text":"Check input matrices","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/check_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input matrices — check_input","text":"","code":"check_input(meth, unmeth)"},{"path":"http://omnideconv.org/methylDeconv/reference/check_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input matrices — check_input","text":"meth matrix quantities methylated sites unmeth matrix quantities methylated sites","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/check_input_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input beta matrix — check_input_beta","title":"Check input beta matrix — check_input_beta","text":"Check input beta matrix","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/check_input_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input beta matrix — check_input_beta","text":"","code":"check_input_beta(beta_matrix)"},{"path":"http://omnideconv.org/methylDeconv/reference/check_input_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input beta matrix — check_input_beta","text":"beta_matrix beta matrix","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/check_input_beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check input beta matrix — check_input_beta","text":"matrix, fixed","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/check_input_mset.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input methylSet — check_input_mset","title":"Check input methylSet — check_input_mset","text":"Check input methylSet","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/check_input_mset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input methylSet — check_input_mset","text":"","code":"check_input_mset(methyl_set)"},{"path":"http://omnideconv.org/methylDeconv/reference/check_input_mset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input methylSet — check_input_mset","text":"methyl_set minfi methylSet","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/create_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Create beta matrix from a methylset matrices — create_beta","title":"Create beta matrix from a methylset matrices — create_beta","text":"Create beta matrix methylset matrices","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/create_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create beta matrix from a methylset matrices — create_beta","text":"","code":"create_beta(methyl_set)"},{"path":"http://omnideconv.org/methylDeconv/reference/create_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create beta matrix from a methylset matrices — create_beta","text":"methyl_set minfi methylSet","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/create_beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create beta matrix from a methylset matrices — create_beta","text":"beta matrix","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolution with methyldeconv — deconvolute","title":"Deconvolution with methyldeconv — deconvolute","text":"Deconvolution methyldeconv","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolution with methyldeconv — deconvolute","text":"","code":"deconvolute(   methyl_set,   method = deconvolution_methods,   scale_results = FALSE,   ... )"},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolution with methyldeconv — deconvolute","text":"methyl_set minfi MethylSet method string specifying method. Supported methods 'epidish', 'houseman', 'methylcc', 'methylresolver', 'methatlas' scale_results Whether deconvolution results rescaled. Negative values set 0, estimates normalized sum 1 per sample. Defaults FALSE. ... Additional parameters, passed algorithm used. See individual method documentations details.","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deconvolution with methyldeconv — deconvolute","text":"matrix probabilities cell-type individual. Rows individuals, columns cell types.","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deconvolution with methyldeconv — deconvolute","text":"","code":"ex_data <- minfiData::MsetEx  result <- deconvolute(ex_data, method='epidish') #> Warning: 12 NA values detected in your beta matrix. Replacing them with 0.5. #> RPC was chosen as default for \"mode\" #> blood was chosen as default for \"reference\" #> Starting EpiDISH deconvolution with mode RPC ..."},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolute_combined.html","id":null,"dir":"Reference","previous_headings":"","what":"Run selected set of methods and average results — deconvolute_combined","title":"Run selected set of methods and average results — deconvolute_combined","text":"Run selected set methods average results","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolute_combined.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run selected set of methods and average results — deconvolute_combined","text":"","code":"deconvolute_combined(   methyl_set,   array = c(\"450k\", \"EPIC\"),   methods,   scale_results = FALSE,   ... )"},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolute_combined.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run selected set of methods and average results — deconvolute_combined","text":"methyl_set minfi MethylSet array type methylation array used. possible options '450k' 'EPIC' methods list methods (>1) applied methyl set scale_results Whether deconvolution results rescaled. Negative values set 0, estimates normalized sum 1 per sample. Defaults FALSE. ... Additional parameters, passed algorithm used. See individual method documentations details.","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolute_combined.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run selected set of methods and average results — deconvolute_combined","text":"dataframe results selected methods well combined estimates","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolute_combined.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run selected set of methods and average results — deconvolute_combined","text":"","code":"ex_data <- minfiData::MsetEx  result <- deconvolute_combined(ex_data, methods=c('epidish','houseman')) #> Warning: 12 NA values detected in your beta matrix. Replacing them with 0.5. #> RPC was chosen as default for \"mode\" #> blood was chosen as default for \"reference\" #> Starting EpiDISH deconvolution with mode RPC ... #> 450k was chosen as default for \"array\" #> Blood was chosen as default for \"compositeCellType\" #> IlluminaHumanMethylationEPIC was chosen as default for \"referencePlatform\" #> IDOL was chosen as default for \"probeSelect\" #> [estimateCellCounts2] The function will assume that no preprocessing has been performed. Using 'preprocessQuantile' in prenormalized data is experimental and it should only be run under the user responsibility #> Loading required package: FlowSorted.Blood.EPIC #> Loading required package: ExperimentHub #> Loading required package: AnnotationHub #> Loading required package: BiocFileCache #> Loading required package: dbplyr #>  #> Attaching package: ‘AnnotationHub’ #> The following object is masked from ‘package:Biobase’: #>  #>     cache #> see ?FlowSorted.Blood.EPIC and browseVignettes('FlowSorted.Blood.EPIC') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> Loading required package: IlluminaHumanMethylationEPICmanifest #> [convertArray] Casting as IlluminaHumanMethylationEPIC #> [estimateCellCounts2] Combining user data with reference (flow sorted) data. #> Warning: NAs introduced by coercion #> [estimateCellCounts2] Processing user and reference data together. #> [preprocessQuantile] Mapping to genome. #> Loading required package: IlluminaHumanMethylationEPICanno.ilm10b4.hg19 #> [preprocessQuantile] Fixing outliers. #> [preprocessQuantile] Quantile normalizing. #> [estimateCellCounts2] Using IDOL L-DMR probes for composition estimation. #> [estimateCellCounts2] Estimating proportion composition (prop), if you provide cellcounts those will be provided as counts in the composition estimation."},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolution_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"List of supported deconvolution methods — deconvolution_methods","title":"List of supported deconvolution methods — deconvolution_methods","text":"methods currently supported EpiDISH, Houseman, MethylCC, MethylResolver, MethAtlas","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolution_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of supported deconvolution methods — deconvolution_methods","text":"","code":"deconvolution_methods"},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolution_methods.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of supported deconvolution methods — deconvolution_methods","text":"object class character length 5.","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/deconvolution_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of supported deconvolution methods — deconvolution_methods","text":"object named vector. names correspond display name method, values internal name.","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/init_python.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Python Environment with Miniconda — init_python","title":"Initialize Python Environment with Miniconda — init_python","text":"Sets Miniconda environment Python 3.8 'r-methyldeconv' package. Installs Miniconda present, creates 'r-methyldeconv' Conda environment exist, installs required Python packages (numpy, pandas, scipy, matplotlib).","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/init_python.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Python Environment with Miniconda — init_python","text":"","code":"init_python()"},{"path":"http://omnideconv.org/methylDeconv/reference/init_python.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize Python Environment with Miniconda — init_python","text":"Installs Miniconda missing. Creates 'r-methyldeconv' environment Python 3.8 installs dependencies. Activates environment displays Python configuration.","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/init_python.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize Python Environment with Miniconda — init_python","text":"","code":"if (FALSE) { # \\dontrun{   init_python() } # }"},{"path":"http://omnideconv.org/methylDeconv/reference/methyldeconvstartup.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage python dependencies according to: https://rstudio.github.io/reticulate/articles/python_dependencies.html#manual-configuration — methyldeconvstartup","title":"Manage python dependencies according to: https://rstudio.github.io/reticulate/articles/python_dependencies.html#manual-configuration — methyldeconvstartup","text":"Manage python dependencies according : https://rstudio.github.io/reticulate/articles/python_dependencies.html#manual-configuration","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/normalize_deconv_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize deconvolution result — normalize_deconv_results","title":"Normalize deconvolution result — normalize_deconv_results","text":"Normalize deconvolution result","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/normalize_deconv_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize deconvolution result — normalize_deconv_results","text":"","code":"normalize_deconv_results(deconv_result)"},{"path":"http://omnideconv.org/methylDeconv/reference/normalize_deconv_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize deconvolution result — normalize_deconv_results","text":"deconv_result original deconvolution result","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/normalize_deconv_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize deconvolution result — normalize_deconv_results","text":"matrix rowsums one negative values","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/rename_cell_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Cell Types in Deconvolution Results — rename_cell_types","title":"Rename Cell Types in Deconvolution Results — rename_cell_types","text":"Renames set cell type names standardized names. uses predefined mappings replace specific cell type names consistent labels (e.g., \"CD8T\" \"T cell CD8+\"). Unrecognized names labeled \"\".","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/rename_cell_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Cell Types in Deconvolution Results — rename_cell_types","text":"","code":"rename_cell_types(input_celltypes)"},{"path":"http://omnideconv.org/methylDeconv/reference/rename_cell_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Cell Types in Deconvolution Results — rename_cell_types","text":"input_celltypes list cell types","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/rename_cell_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Cell Types in Deconvolution Results — rename_cell_types","text":"new list cell types controlled vocabulary","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/results_aggregated_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the results from deconvolute_combined() as boxplots for each celltype and celltype — results_aggregated_boxplot","title":"Function to plot the results from deconvolute_combined() as boxplots for each celltype and celltype — results_aggregated_boxplot","text":"Function plot results deconvolute_combined() boxplots celltype celltype","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/results_aggregated_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the results from deconvolute_combined() as boxplots for each celltype and celltype — results_aggregated_boxplot","text":"","code":"results_aggregated_boxplot(result)"},{"path":"http://omnideconv.org/methylDeconv/reference/results_aggregated_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the results from deconvolute_combined() as boxplots for each celltype and celltype — results_aggregated_boxplot","text":"result result deconvolute_combined()","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/results_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the results from deconvolute() as barplots for each sample — results_barplot","title":"Function to plot the results from deconvolute() as barplots for each sample — results_barplot","text":"Function plot results deconvolute()  barplots sample","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/results_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the results from deconvolute() as barplots for each sample — results_barplot","text":"","code":"results_barplot(result)"},{"path":"http://omnideconv.org/methylDeconv/reference/results_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the results from deconvolute() as barplots for each sample — results_barplot","text":"result result deconvolute()","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/results_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the results from deconvolute() as boxplots for each celltype — results_boxplot","title":"Function to plot the results from deconvolute() as boxplots for each celltype — results_boxplot","text":"Function plot results deconvolute()  boxplots celltype","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/results_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the results from deconvolute() as boxplots for each celltype — results_boxplot","text":"","code":"results_boxplot(result)"},{"path":"http://omnideconv.org/methylDeconv/reference/results_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the results from deconvolute() as boxplots for each celltype — results_boxplot","text":"result result deconvolute()","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_epidish.html","id":null,"dir":"Reference","previous_headings":"","what":"run EpiDISH — run_epidish","title":"run EpiDISH — run_epidish","text":"run EpiDISH","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_epidish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run EpiDISH — run_epidish","text":"","code":"run_epidish(   beta_matrix,   mode = c(\"RPC\", \"CBS\", \"CP\"),   reference = c(\"blood\", \"breast\", \"epithelial\"),   maxit = 50,   nu.v = c(0.25, 0.5, 0.7),   constraint = c(\"inequality\", \"equality\") )"},{"path":"http://omnideconv.org/methylDeconv/reference/run_epidish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run EpiDISH — run_epidish","text":"beta_matrix beta matrix CpGs rows samples columns mode Choice reference-based method ('RPC','CBS','CP') reference matrix reference 'centroids', .e. representative molecular profiles, number cell subtypes. rows label molecular features (e.g. CpGs,...) columns label cell-type. IDs need provided rownames colnames, respectively. Missing value allowed, values matrix positive zero. DNAm data, values beta-values. maxit used RPC mode, limit number IWLS iterations nu.v used CBS mode. vector several candidate nu values. nu parameter needed nu-classification, nu-regression, one-classification svm. best estimation results among candidate nu automatically returned. constraint used CP mode, can choose either 'inequality' 'equality' normalization constraint. default 'inequality' (.e sum weights adds number less equal 1), implemented Houseman et al (2012).","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_epidish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run EpiDISH — run_epidish","text":"CP-mode list following entries: estF: matrix estimated fractions; ref: reference centroid matrix used; dataREF: subset input data matrix probes defined reference matrix. CBS-mode list following entries: estF: matrix estimated fractions; nu: vector 'best' nu-parameter sample; ref: reference centroid matrix used; dataREF: subset input data matrix probes defined reference matrix. RPC-mode list following entries: estF: matrix estimated fractions; ref: reference centroid matrix used; dataREF: subset input data matrix probes defined reference matrix.","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_houseman.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the improved Houseman method — run_houseman","title":"Run the improved Houseman method — run_houseman","text":"Run improved Houseman method","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_houseman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the improved Houseman method — run_houseman","text":"","code":"run_houseman(   methyl_set,   array = c(\"450k\", \"EPIC\"),   compositeCellType = c(\"Blood\", \"CordBloodCombined\", \"CordBlood\", \"CordBloodNorway\",     \"CordTissueAndBlood\", \"DLPFC\"),   processMethod = \"preprocessQuantile\",   probeSelect = c(\"IDOL\", \"both\", \"any\"),   cellTypes = c(\"CD8T\", \"CD4T\", \"NK\", \"Bcell\", \"Mono\", \"Neu\"),   referencePlatform = c(\"IlluminaHumanMethylationEPIC\", \"IlluminaHumanMethylation450k\",     \"IlluminaHumanMethylation27k\"),   referenceset = NULL,   CustomCpGs = NULL,   meanPlot = FALSE,   verbose = TRUE,   lessThanOne = FALSE,   cellCounts = NULL,   ... )"},{"path":"http://omnideconv.org/methylDeconv/reference/run_houseman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the improved Houseman method — run_houseman","text":"methyl_set minfi MethylSet array type methylation array used. possible options '450k' 'EPIC' compositeCellType composite cell type deconvoluted. one \"Blood\", \"CordBloodCombined\", \"CordBlood\", \"CordBloodNorway\", \"CordTissueAndBlood\", \"DLPFC\". See details preferred approaches. processMethod Joint normalization/background correction user reference data. MethylSet objects \"preprocessQuantile\" available. Set minfi preprocessing function character want override , like \"preprocessFunnorm\" probeSelect probes selected distinguish cell types? Options include: 1) \"IDOL\", (default) using customized set probes obtained IDOL optimization, available Blood Umbilical Cord Blood 2) \"\", selects equal number (50) probes (F-stat p-value < 1E-8) greatest magnitude effect hyper- hypo-methylated sides, 3) \"\", selects 100 probes (F-stat p-value < 1E-8) greatest magnitude difference regardless direction effect. according minfi algorithm. Default input \"auto\" minfi use \"\" cord blood \"\" otherwise. Please see references details. cellTypes vector length K contains cell type names. Default: c(\"CD8T\", \"CD4T\", \"NK\", \"Bcell\", \"Mono\", \"Neu\"). Please notice library use Neutrophils instead Granulocytes. See details library. referencePlatform platform reference dataset; options include c(\"IlluminaHumanMethylation450k\", \"IlluminaHumanMethylationEPIC\" (default), \"IlluminaHumanMethylation27k\"). input rgSet belongs another platform, converted using minfi function convertArray. changed user. referenceset NULL default. custom reference RGChannelSet object (quotes) package installed. option also allows user perform deconvolution closed computing clusters without internet access ExperimentHub. download save reference input resulting object . using installed reference package set NULL. CustomCpGs custom vector probe names cell deconvolution. custom lists vector object (quotes). meanPlot Whether plots average DNA methylation across cell-type discriminating probes within mixed sorted samples. verbose function verbose? lessThanOne predictions constrained exactly one, minfi default FALSE, now can select option cellCounts cell counts available (CBC, flow sort) add vector lenght equal samples deconvolved ... arguments preprocessQuantile normalizations","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_methatlas.html","id":null,"dir":"Reference","previous_headings":"","what":"run MethAtlas — run_methatlas","title":"run MethAtlas — run_methatlas","text":"run MethAtlas","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_methatlas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run MethAtlas — run_methatlas","text":"","code":"run_methatlas(   beta_matrix,   reference_atlas = system.file(\"reference_atlas.csv\", package = \"methyldeconv\"),   temp_dir = NULL,   out_dir = NULL,   use_epic_reference = FALSE )"},{"path":"http://omnideconv.org/methylDeconv/reference/run_methatlas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run MethAtlas — run_methatlas","text":"beta_matrix beta matrix CpGs rows samples columns reference_atlas Path csv file saves reference matrix CpGs rows cell types columns. default (tissue-wide) reference file stored 'inst/reference_atlas.csv'. temp_dir Path directory beta matrix saved csv file. out_dir Path output directory. Output csv file png representing cell type fractions. use_epic_reference MethAtlas whole-tissue reference immunecell-specific reference optimized EPIC arrays (subset whole-tissue reference)","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_methylcc.html","id":null,"dir":"Reference","previous_headings":"","what":"run methylCC deconvolution — run_methylcc","title":"run methylCC deconvolution — run_methylcc","text":"run methylCC deconvolution","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_methylcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run methylCC deconvolution — run_methylcc","text":"","code":"run_methylcc(   methyl_set,   array = c(\"450k\", \"EPIC\"),   find_dmrs_object = NULL,   verbose = TRUE,   epsilon = 0.01,   max_iter = 100,   take_intersection = FALSE,   include_cpgs = FALSE,   include_dmrs = TRUE,   init_param_method = \"random\",   a0init = NULL,   a1init = NULL,   sig0init = NULL,   sig1init = NULL,   tauinit = NULL,   demo = FALSE,   seed = 1 )"},{"path":"http://omnideconv.org/methylDeconv/reference/run_methylcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run methylCC deconvolution — run_methylcc","text":"methyl_set minfi MethylSet array type methylation array used. possible options '450k' 'EPIC' find_dmrs_object user like supply different differentially methylated regions, can use output find_dmrs function supply different regions estimatecc. verbose TRUE/FALSE argument specifying verbose messages returned . Default TRUE. epsilon Threshold EM algorithm check convergence. Default 0.01. max_iter Maximum number iterations EM algorithm. Default 100 iterations. take_intersection TRUE/FALSE asking CpGs included object used find DMRs. Default FALSE. include_cpgs TRUE/FALSE. individual CpGs returned. Default FALSE. include_dmrs TRUE/FALSE. differentially methylated regions returned. Default TRUE. init_param_method method initialize parameter estimates. Choose \"random\" (randomly sample) \"known_regions\" (uses unmethyalted methylated regions identified based Reinus et al. (2012) cell sorted data.). Defaults \"random\". a0init Default NULL. Initial mean methylation level unmethylated regions a1init Default NULL. Initial mean methylation level methylated regions sig0init Default NULL. Initial var methylation level unmethylated regions sig1init Default NULL. Initial var methylation level methylated regions tauinit Default NULL. Initial var measurement error demo TRUE/FALSE. function used demo mode shorten examples package. Defaults FALSE. seed fixed seed account RNG influences","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_methylcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run methylCC deconvolution — run_methylcc","text":"object class estimatecc contains information cell composition estimation (summary slot) cell composition estimates (cell_counts slot).","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_methylresolver.html","id":null,"dir":"Reference","previous_headings":"","what":"Run MethylResolver — run_methylresolver","title":"Run MethylResolver — run_methylresolver","text":"Run MethylResolver","code":""},{"path":"http://omnideconv.org/methylDeconv/reference/run_methylresolver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run MethylResolver — run_methylresolver","text":"","code":"run_methylresolver(   beta_matrix,   doPar = F,   numCores = 1,   alpha = seq(0.5, 0.9, by = 0.05),   absolute = TRUE,   purityModel = MethylResolver::RFmodel,   seed = 1 )"},{"path":"http://omnideconv.org/methylDeconv/reference/run_methylresolver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run MethylResolver — run_methylresolver","text":"beta_matrix beta matrix CpGs rows samples columns doPar Whether use parallel processing speed deconvolution computation many samples present. Default FALSE. numCores Number cores used parallel processing speed deconvolution many samples. Requires doPar = TRUE. Default 1. numCores = \"auto\" max number cores available minus one. alpha Set alpha parameter LTS deconvolution. fraction optimal CpGs signature matrix used deconvolution. Must 0 1. Users can specify vector single number. vector specified, grid search values conducted alpha value results lowest RMSE original reconstructed mixture selected. Default seq(0.5,0.9,= 0.05). absolute Whether compute tumor purity absolute cell type fractions. Default TRUE. purityModel Random Forest model predict mixture purity (unknown content) allows calculation absolute cell type fractions. Required absolute TRUE. Default RF model trained consensus purity estimate (CPE) using TCGA data. seed fixed seed account RNG influences","code":""},{"path":"http://omnideconv.org/methylDeconv/news/index.html","id":"methyldeconv-003","dir":"Changelog","previous_headings":"","what":"methyldeconv 0.0.3","title":"methyldeconv 0.0.3","text":"rebranded methylDeconv methyldeconv","code":""},{"path":"http://omnideconv.org/methylDeconv/news/index.html","id":"methyldeconv-002","dir":"Changelog","previous_headings":"","what":"methylDeconv 0.0.2","title":"methylDeconv 0.0.2","text":"First version package.","code":""},{"path":"http://omnideconv.org/methylDeconv/news/index.html","id":"methyldeconv-001","dir":"Changelog","previous_headings":"","what":"methylDeconv 0.0.1","title":"methylDeconv 0.0.1","text":"Added NEWS.md file track changes package.","code":""}]
